// Temp 1: Export function from other File
const { add, sub } = require("./helper");
const http = require('http');

const server = http.createServer((req, res) => {
    res.end("Hello World from Node JS updated");
})

server.listen(3000);

const addTotal = add(10, 20);
const subTotal = sub(20, 10);

console.log("Add: ", addTotal);
console.log("Sub: ", subTotal);

// Temp 2:  Loop programming
const fs = require('fs')
const fileName = "target.txt"

fs.watch(fileName, () => console.log(`File changed`));

// Temp 3: Synchronous & Asynchronus programming
const fs = require("fs");
const fileName = "target.txt";

const data = fs.readFileSync(fileName);
console.log("SYNCHRONOUS", data.toString());

// fs.watch(fileName, () => console.log(`File changed`));

fs.readFile(fileName, (err, data) =>{
    if (err){
        console.log(err);
    }
    console.log("ASYNCHRONOUS", data.toString());
});

console.log("NORMAL TEXT");

// Temp 4: Function in Nodejs, error handler
const fs = require("fs");
const fileName = "target.txt";

const errHandler = err => console.log(err);
const dataHandler = data => console.log(data.toString());

// fs.watch(fileName, () => console.log(`File changed`));

fs.readFile(fileName, (err, data) =>{
    if (err){
        errHandler(err);
    }
    dataHandler(data);
});

console.log("NORMAL TEXT");

// Temp 5: Middleware
// Custom middleware
const customMiddleware = (req, res, next) => {
    console.log("Parfois, une rencontre peut changer notre vie.");
    next();
}
// Middleware: Call custom  
app.use(customMiddleware);